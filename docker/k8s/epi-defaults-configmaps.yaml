apiVersion: v1
data:
  bdns.hosts: |-
    {
      "default": {
        "replicas": [],
        "brickStorages": [
          "$ORIGIN"
        ],
        "anchoringServices": [
          "$ORIGIN"
        ],
        "notifications": [
          "$ORIGIN"
        ]
      },
      "epi": {
        "replicas": [],
        "brickStorages": [
          "$ORIGIN"
        ],
        "anchoringServices": [
          "$ORIGIN"
        ],
        "notifications": [
          "$ORIGIN"
        ]
      },
      "epiqa": {
        "replicas": [],
        "brickStorages": [
          "$ORIGIN"
        ],
        "anchoringServices": [
          "$ORIGIN"
        ],
        "notifications": [
          "$ORIGIN"
        ]
      },
      "epidev": {
        "replicas": [],
        "brickStorages": [
          "$ORIGIN"
        ],
        "anchoringServices": [
          "$ORIGIN"
        ],
        "notifications": [
          "$ORIGIN"
        ]
      },
      "vault": {
        "replicas": [],
        "brickStorages": [
          "$ORIGIN"
        ],
        "anchoringServices": [
          "$ORIGIN"
        ],
        "notifications": [
          "$ORIGIN"
        ]
      },
      "vault.nvs": {
        "replicas": [],
        "brickStorages": [
          "$ORIGIN"
        ],
        "anchoringServices": [
          "$ORIGIN"
        ],
        "notifications": [
          "$ORIGIN"
        ]
      },
      "vault.msd": {
        "replicas": [],
        "brickStorages": [
          "$ORIGIN"
        ],
        "anchoringServices": [
          "$ORIGIN"
        ],
        "notifications": [
          "$ORIGIN"
        ]
      },
      "vault.jnj": {
        "replicas": [],
        "brickStorages": [
          "$ORIGIN"
        ],
        "anchoringServices": [
          "$ORIGIN"
        ],
        "notifications": [
          "$ORIGIN"
        ]
      },
      "predefined": {
        "replicas": [],
        "brickStorages": [
          "$ORIGIN"
        ],
        "anchoringServices": [
          "$ORIGIN"
        ],
        "notifications": [
          "$ORIGIN"
        ]
      }
    }
  env.json: |
    {
      "PSK_TMP_WORKING_DIR": "tmp",
      "PSK_CONFIG_LOCATION": "../apihub-root/external-volume/config",
      "SSAPPS_FAVORITE_EDFS_ENDPOINT": "http://localhost:8080",
      "IS_PRODUCTION_BUILD": true
    }
  seedsBackup: |
    {
      "apihub-root/dsu-explorer/apps-patch/dossier-explorer-ssapp/seed":"BBudGH6ySHG6GUHN8ogNrTWbSh5w1cRuxMBSayyLW5Cgy8fDmvRFecVCnx4nsyjwMrfktX2PPrDECTvartohtJmUB",
      "apihub-root/dsu-explorer/wallet-patch/seed":"BBudGH6ySHG6GUHN8ogNrTWc9NfiW1uDdk6PR7SsiHppqRVoyxEFc9wCCncRR55VwH5KiCmyxYnaqc2fVKH2PHj8s",
      "apihub-root/dsu-fabric-wallet/apps-patch/dsu-fabric-ssapp/seed":"BBudGH6ySHG6GUHN8ogNrTWbxX8W42XDZRFa21r1yqqqN5JSdVzw5zXY19v3xMvnyUd2W82WhSNmY9VPKeZLQf4qd",
      "apihub-root/dsu-fabric-wallet/wallet-patch/seed":"BBudGH6ySHG6GUHN8ogNrTWbWnhc1dZo3j7yoYR4eUMbhcP1Ju1A2wKH8cZdxj5fy7aYRsDjuy7sGsgKkn9fuVEx7",
      "apihub-root/leaflet-wallet/apps-patch/leaflet-ssapp/seed":"BBudGH6ySHG6GUHN8ogNrTWbX5aENzfM2efjfAaScwkEk7EKZMDUFcKopDqxmjJaqwTkp8CqeXoV5NbD1t9Azy3VZ",
      "apihub-root/leaflet-wallet/wallet-patch/seed":"BBudGH6ySHG6GUHN8ogNrTWbX5aENzfM2efjfAaScwkEk7EKZMDUFcKopDqxmjJaqwTkp8CqeXoV5NbD1t9Azy3VZ",
      "cardinal/seed":"BBudGH6ySHG6GUHN8ogNrTWbQiKuMsP9B3171DVeWWF7tgAFk58UxrUPkLKBreM9WUJEbxhpf9M2qjtvKhN4Fu7dH",
      "dossier-explorer-ssapp/seed":"BBudGH6ySHG6GUHN8ogNrTWbSh5w1cRuxMBSayyLW5Cgy8fDmvRFecVCnx4nsyjwMrfktX2PPrDECTvartohtJmUB",
      "dossier-explorer-wallet-prototype/seed":"BBudGH6ySHG6GUHN8ogNrTWc9NfiW1uDdk6PR7SsiHppqRVoyxEFc9wCCncRR55VwH5KiCmyxYnaqc2fVKH2PHj8s",
      "dsu-fabric-ssapp/seed":"BBudGH6ySHG6GUHN8ogNrTWbxX8W42XDZRFa21r1yqqqN5JSdVzw5zXY19v3xMvnyUd2W82WhSNmY9VPKeZLQf4qd",
      "leaflet-ssapp/seed":"BBudGH6ySHG6GUHN8ogNrTWbX5aENzfM2efjfAaScwkEk7EKZMDUFcKopDqxmjJaqwTkp8CqeXoV5NbD1t9Azy3VZ",
      "menu-wallet-prototype/seed":"BBudGH6ySHG6GUHN8ogNrTWbWnhc1dZo3j7yoYR4eUMbhcP1Ju1A2wKH8cZdxj5fy7aYRsDjuy7sGsgKkn9fuVEx7",
      "themes/blue-fluorite-theme/seed":"BBudGH6ySHG6GUHN8ogNrTWbxkAnrwPUSghb8FGaDa2ucDyivqzNudQRWFHPHrQ54RRq9SVve1HBtJ4ek7KD4kBDh",
      "themes/citrus-theme/seed":"BBudGH6ySHG6GUHN8ogNrTWc6hV2mTyW6eN7oWew3Q2eZTiJUdkietkcps58hzhZUW17ujtSHqotDHYByvgjUCMoD",
      "themes/clear-sky-theme/seed":"BBudGH6ySHG6GUHN8ogNrTWbUkhGnbu9B5kdyHPJjACivva26FSrZSJ2TFikm9eayGDxeB9eXrvUiD71mVJ8WjXqR",
      "themes/epi-theme/seed":"BBudGH6ySHG6GUHN8ogNrTWbt94mkUE5uEQiGLo8QZQxgRYLEg1AkzmpZ7NFynT7Kiv4X3dxJYZBmqghivXk3qCPh",
      "themes/savana-theme/seed":"BBudGH6ySHG6GUHN8ogNrTWbQZj8m5wG3BiWXF4oGKeXShu61XEnmwMCPidSQFXUi7rLQbcAXLgEzx2G68icwhS2s"
    }
  nginx.conf: "user nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid
    /run/nginx.pid;\n\n# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\ninclude
    /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp
    {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\"
    '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\"
    \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n
    \   sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n
    \   keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n
    \   default_type        application/octet-stream;\n\n    # Load modular configuration
    files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n
    \   # for more information.\n    include /etc/nginx/conf.d/*.conf;\n\n\n    server
    {\n         listen       443 ssl http2 default_server;\n         server_name  wg-development.club;\n\n
    \       ssl_certificate \"/ePI-workspace/apihub-root/config/ssl/server.crt\";\n
    \       ssl_certificate_key \"/ePI-workspace/apihub-root/config/ssl/server.key\";\n
    \       ssl_session_cache shared:SSL:1m;\n        ssl_session_timeout  10m;\n
    \       ssl_ciphers HIGH:!aNULL:!MD5;\n        ssl_prefer_server_ciphers on;\n\n
    \       # Load configuration files for the default server block.\n        include
    /etc/nginx/default.d/*.conf;\n\n        location / {\n\t\t\tproxy_pass http://127.0.0.1:8080/;\n
    \       }\n\n    }\n\n}\n\n"
  apihub.json: |-
    {
      "storage": "../apihub-root",
      "port": 8080,
      "preventRateLimit": true,
      "activeComponents": [
        "virtualMQ",
        "messaging",
        "notifications",
        "filesManager",
        "bdns",
        "bricksLedger",
        "bricksFabric",
        "bricking",
        "anchoring",
        "dsu-wizard",
        "gtin-dsu-wizard",
        "epi-mapping-engine",
        "epi-mapping-engine-results",
        "debugLogger",
        "staticServer"
      ],
      "componentsConfig": {
        "epi-mapping-engine": {
          "module": "./../../epi-utils",
          "function": "getEPIMappingEngineForAPIHUB"
        },
        "epi-mapping-engine-results": {
          "module": "./../../epi-utils",
          "function": "getEPIMappingEngineMessageResults"
        },
        "gtin-dsu-wizard": {
          "module": "./../../gtin-dsu-wizard"
        },
        "bricking": {},
        "anchoring": {}
      },
      "enableRequestLogger": true,
      "enableJWTAuthorisation": false,
      "enableLocalhostAuthorization": false,
      "skipJWTAuthorisation": [
        "/assets",
        "/leaflet-wallet",
        "/dsu-fabric-wallet",
        "/directory-summary",
        "/resources",
        "/bdns",
        "/anchor/epi",
        "/anchor/default",
        "/anchor/vault",
        "/bricking",
        "/bricksFabric",
        "/bricksledger",
        "/create-channel",
        "/forward-zeromq",
        "/send-message",
        "/receive-message",
        "/files",
        "/notifications",
        "/mq"
      ]
    }
kind: ConfigMap
metadata:
  name: epi-defaults
